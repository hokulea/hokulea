/*
#######################################
  SIZING
#######################################
*/

:root {
  /*
    Sizing Parameters
    --------------------------------------

    Control the sizing
  */
  --ratio: var(--sizing-ratio, 1.3);
  --factor: var(--sizing-factor, 0.8);
  --sizing-global-base: calc(0.5vw + 1em * var(--factor));
  --sizing-local-base: 1em;

  /* computed tokens */

  /* global sizing tokens */
  --s-4: calc(var(--sizing-global-base) * pow(var(--ratio), -4));
  --s-3: calc(var(--sizing-global-base) * pow(var(--ratio), -3));
  --s-2: calc(var(--sizing-global-base) * pow(var(--ratio), -2));
  --s-1: calc(var(--sizing-global-base) * pow(var(--ratio), -1));
  --s0: var(--sizing-global-base);
  --s1: calc(var(--sizing-global-base) * pow(var(--ratio), 1));
  --s2: calc(var(--sizing-global-base) * pow(var(--ratio), 2));
  --s3: calc(var(--sizing-global-base) * pow(var(--ratio), 3));
  --s4: calc(var(--sizing-global-base) * pow(var(--ratio), 4));

  /* local sizing tokens */
  --ls-4: calc(var(--sizing-local-base) * pow(var(--ratio), -4));
  --ls-3: calc(var(--sizing-local-base) * pow(var(--ratio), -3));
  --ls-2: calc(var(--sizing-local-base) * pow(var(--ratio), -2));
  --ls-1: calc(var(--sizing-local-base) * pow(var(--ratio), -1));
  --ls0: var(--sizing-local-base);
  --ls1: calc(var(--sizing-local-base) * pow(var(--ratio), 1));
  --ls2: calc(var(--sizing-local-base) * pow(var(--ratio), 2));
  --ls3: calc(var(--sizing-local-base) * pow(var(--ratio), 3));
  --ls4: calc(var(--sizing-local-base) * pow(var(--ratio), 4));
}
