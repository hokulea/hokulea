import { getRootElement, settled } from '@ember/test-helpers';
function getOptions(selector) {
    return [...getRootElement().querySelectorAll(selector)];
}
function findOption(selector, text) {
    return getOptions(selector).find(e => e.textContent?.trim().includes(text));
}
function findOptions(selector, texts) {
    return getOptions(selector).filter(e => texts.includes(e.textContent?.trim()));
}
export async function select(selectors, text) {
    const options = Array.isArray(text)
        ? findOptions(selectors.option, text)
        : [findOption(selectors.option, text)];
    if (options.length > 0) {
        const list = getRootElement().querySelector(selectors.list);
        list?.dispatchEvent(new CustomEvent('listbox', {
            detail: {
                command: 'select',
                selection: options
            }
        }));
        await settled();
    }
}
export async function activateItem(selectors, text) {
    const item = findOption(selectors.option, text);
    if (item) {
        const list = getRootElement().querySelector(selectors.list);
        list?.dispatchEvent(new CustomEvent('listbox', {
            detail: {
                command: 'select',
                option: item
            }
        }));
        await settled();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdGJveC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImxpc3Rib3gudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUU5RCxTQUFTLFVBQVUsQ0FBQyxRQUFnQjtJQUNsQyxPQUFPLENBQUMsR0FBRyxjQUFjLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsQ0FBa0IsQ0FBQztBQUMzRSxDQUFDO0FBRUQsU0FBUyxVQUFVLENBQUMsUUFBZ0IsRUFBRSxJQUFZO0lBQ2hELE9BQU8sVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDOUUsQ0FBQztBQUVELFNBQVMsV0FBVyxDQUFDLFFBQWdCLEVBQUUsS0FBZTtJQUNwRCxPQUFPLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FDckMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLElBQUksRUFBWSxDQUFDLENBQ2hELENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxDQUFDLEtBQUssVUFBVSxNQUFNLENBQzFCLFNBQTJDLEVBQzNDLElBQXVCO0lBRXZCLE1BQU0sT0FBTyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQ2pDLENBQUMsQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUM7UUFDckMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUV6QyxJQUFJLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLENBQUM7UUFDdkIsTUFBTSxJQUFJLEdBQUcsY0FBYyxFQUFFLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1RCxJQUFJLEVBQUUsYUFBYSxDQUNqQixJQUFJLFdBQVcsQ0FBQyxTQUFTLEVBQUU7WUFDekIsTUFBTSxFQUFFO2dCQUNOLE9BQU8sRUFBRSxRQUFRO2dCQUNqQixTQUFTLEVBQUUsT0FBTzthQUNuQjtTQUNGLENBQUMsQ0FDSCxDQUFDO1FBQ0YsTUFBTSxPQUFPLEVBQUUsQ0FBQztJQUNsQixDQUFDO0FBQ0gsQ0FBQztBQUVELE1BQU0sQ0FBQyxLQUFLLFVBQVUsWUFBWSxDQUNoQyxTQUEyQyxFQUMzQyxJQUFZO0lBRVosTUFBTSxJQUFJLEdBQUcsVUFBVSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFFaEQsSUFBSSxJQUFJLEVBQUUsQ0FBQztRQUNULE1BQU0sSUFBSSxHQUFHLGNBQWMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDNUQsSUFBSSxFQUFFLGFBQWEsQ0FDakIsSUFBSSxXQUFXLENBQUMsU0FBUyxFQUFFO1lBQ3pCLE1BQU0sRUFBRTtnQkFDTixPQUFPLEVBQUUsUUFBUTtnQkFDakIsTUFBTSxFQUFFLElBQUk7YUFDYjtTQUNGLENBQUMsQ0FDSCxDQUFDO1FBQ0YsTUFBTSxPQUFPLEVBQUUsQ0FBQztJQUNsQixDQUFDO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFJvb3RFbGVtZW50LCBzZXR0bGVkIH0gZnJvbSAnQGVtYmVyL3Rlc3QtaGVscGVycyc7XG5cbmZ1bmN0aW9uIGdldE9wdGlvbnMoc2VsZWN0b3I6IHN0cmluZyk6IEhUTUxFbGVtZW50W10ge1xuICByZXR1cm4gWy4uLmdldFJvb3RFbGVtZW50KCkucXVlcnlTZWxlY3RvckFsbChzZWxlY3RvcildIGFzIEhUTUxFbGVtZW50W107XG59XG5cbmZ1bmN0aW9uIGZpbmRPcHRpb24oc2VsZWN0b3I6IHN0cmluZywgdGV4dDogc3RyaW5nKTogSFRNTEVsZW1lbnQgfCB1bmRlZmluZWQge1xuICByZXR1cm4gZ2V0T3B0aW9ucyhzZWxlY3RvcikuZmluZChlID0+IGUudGV4dENvbnRlbnQ/LnRyaW0oKS5pbmNsdWRlcyh0ZXh0KSk7XG59XG5cbmZ1bmN0aW9uIGZpbmRPcHRpb25zKHNlbGVjdG9yOiBzdHJpbmcsIHRleHRzOiBzdHJpbmdbXSk6IEhUTUxFbGVtZW50W10ge1xuICByZXR1cm4gZ2V0T3B0aW9ucyhzZWxlY3RvcikuZmlsdGVyKGUgPT5cbiAgICB0ZXh0cy5pbmNsdWRlcyhlLnRleHRDb250ZW50Py50cmltKCkgYXMgc3RyaW5nKVxuICApO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2VsZWN0KFxuICBzZWxlY3RvcnM6IHsgb3B0aW9uOiBzdHJpbmc7IGxpc3Q6IHN0cmluZyB9LFxuICB0ZXh0OiBzdHJpbmcgfCBzdHJpbmdbXVxuKTogUHJvbWlzZTx2b2lkPiB7XG4gIGNvbnN0IG9wdGlvbnMgPSBBcnJheS5pc0FycmF5KHRleHQpXG4gICAgPyBmaW5kT3B0aW9ucyhzZWxlY3RvcnMub3B0aW9uLCB0ZXh0KVxuICAgIDogW2ZpbmRPcHRpb24oc2VsZWN0b3JzLm9wdGlvbiwgdGV4dCldO1xuXG4gIGlmIChvcHRpb25zLmxlbmd0aCA+IDApIHtcbiAgICBjb25zdCBsaXN0ID0gZ2V0Um9vdEVsZW1lbnQoKS5xdWVyeVNlbGVjdG9yKHNlbGVjdG9ycy5saXN0KTtcbiAgICBsaXN0Py5kaXNwYXRjaEV2ZW50KFxuICAgICAgbmV3IEN1c3RvbUV2ZW50KCdsaXN0Ym94Jywge1xuICAgICAgICBkZXRhaWw6IHtcbiAgICAgICAgICBjb21tYW5kOiAnc2VsZWN0JyxcbiAgICAgICAgICBzZWxlY3Rpb246IG9wdGlvbnNcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICApO1xuICAgIGF3YWl0IHNldHRsZWQoKTtcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYWN0aXZhdGVJdGVtKFxuICBzZWxlY3RvcnM6IHsgb3B0aW9uOiBzdHJpbmc7IGxpc3Q6IHN0cmluZyB9LFxuICB0ZXh0OiBzdHJpbmdcbik6IFByb21pc2U8dm9pZD4ge1xuICBjb25zdCBpdGVtID0gZmluZE9wdGlvbihzZWxlY3RvcnMub3B0aW9uLCB0ZXh0KTtcblxuICBpZiAoaXRlbSkge1xuICAgIGNvbnN0IGxpc3QgPSBnZXRSb290RWxlbWVudCgpLnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3JzLmxpc3QpO1xuICAgIGxpc3Q/LmRpc3BhdGNoRXZlbnQoXG4gICAgICBuZXcgQ3VzdG9tRXZlbnQoJ2xpc3Rib3gnLCB7XG4gICAgICAgIGRldGFpbDoge1xuICAgICAgICAgIGNvbW1hbmQ6ICdzZWxlY3QnLFxuICAgICAgICAgIG9wdGlvbjogaXRlbVxuICAgICAgICB9XG4gICAgICB9KVxuICAgICk7XG4gICAgYXdhaXQgc2V0dGxlZCgpO1xuICB9XG59XG4iXX0=